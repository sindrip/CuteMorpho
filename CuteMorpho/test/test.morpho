"test.mexe" = main in
!{{
#"main[f0]" =
[
(MakeVal null)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(Push)
(MakeClosure 0 0 1 _L0)
(MakeVal true)
(GoFalse _L4)
(MakeVal false)
_L4:
(GoFalse _L3)
(MakeVal true)
_L3:
(GoFalse _L1)
(MakeVal "true")
(Call #"writeln[f1]" 1)
(Go _L2)
_L1:
(MakeVal "false")
(Call #"writeln[f1]" 1)
_L2:
(MakeVal false)
(GoTrue _L6)
(MakeVal true)
_L6:
(GoFalse _L5)
(MakeVal "true")
(Call #"writeln[f1]" 1)
_L5:
(MakeVal false)
(Not)
(GoFalse _L7)
(MakeVal "true")
(Call #"writeln[f1]" 1)
_L7:
(Return)
_L0:
(Store 0)
(Fetch 0)
(CallClosure 0)
(MakeClosure 0 1 2 _L8)
(MakeClosure 0 1 3 _L9)
(Fetch 2)
(Push)
(Fetch 3)
(Call #"+[f2]" 2)
(Return)
(Return)
_L9:
(Return)
(Return)
_L8:
(Store 1)
(Fetch 1)
(Push)
(MakeVal 5)
(CallClosure 1)
(Store 2)
(Fetch 2)
(Push)
(MakeVal 10)
(CallClosure 1)
(Store 3)
(Fetch 3)
(Push)
(MakeVal 15)
(Call #"==[f2]" 2)
(GoFalse _L10)
(MakeVal "is 15")
(Call #"writeln[f1]" 1)
_L10:
(MakeVal "=============")
(Call #"writeln[f1]" 1)
(MakeVal "should be new scope with 15")
(Call #"writeln[f1]" 1)
(Fetch 3)
(Call #"writeln[f1]" 1)
(MakeVal 10)
(Store 4)
(MakeVal "should be 10")
(Call #"writeln[f1]" 1)
(Fetch 4)
(Call #"writeln[f1]" 1)
(MakeVal "scope should be 15")
(Call #"writeln[f1]" 1)
(Fetch 3)
(Call #"writeln[f1]" 1)
(MakeVal "=============")
(Call #"writeln[f1]" 1)
(MakeClosure 0 1 5 _L11)
(Fetch 5)
(Call #"writeln[f1]" 1)
(Fetch 5)
(Push)
(MakeVal 0)
(Call #">[f2]" 2)
(GoFalse _L12)
(Fetch 4)
(Push)
(Fetch 5)
(Push)
(MakeVal 1)
(Call #"-[f2]" 2)
(CallClosure 1)
_L12:
(Return)
_L11:
(Store 4)
(Fetch 4)
(Push)
(MakeVal 5)
(CallClosure 1)
(MakeVal "=========")
(Call #"writeln[f1]" 1)
(MakeClosure 0 1 6 _L13)
_L14:
(Fetch 6)
(Push)
(MakeVal 0)
(Call #">[f2]" 2)
(GoFalse _L15)
(Fetch 6)
(Call #"writeln[f1]" 1)
(Fetch 6)
(Push)
(MakeVal 1)
(Call #"-[f2]" 2)
(Store 6)
(Go _L14)
_L15:
(MakeVal "loop end x is")
(Push)
(Fetch 6)
(Call #"++[f2]" 2)
(Call #"writeln[f1]" 1)
(Return)
_L13:
(Store 5)
(Fetch 5)
(Push)
(MakeVal 3)
(CallClosure 1)
(MakeVal false)
(GoFalse _L16)
(MakeVal "should not be here")
(Call #"writeln[f1]" 1)
(Go _L17)
_L16:
(MakeVal "should be here")
(Call #"writeln[f1]" 1)
_L17:
(MakeVal 2)
(Push)
(MakeVal 3)
(Call #"==[f2]" 2)
(GoFalse _L18)
(MakeVal "should not be here")
(Call #"writeln[f1]" 1)
(Go _L19)
_L18:
(MakeVal 2)
(Push)
(MakeVal 4)
(Call #"==[f2]" 2)
(GoFalse _L20)
(MakeVal "should not be here")
(Call #"writeln[f1]" 1)
(Go _L21)
_L20:
(MakeVal "should be here")
(Call #"writeln[f1]" 1)
_L21:
_L19:
(Fetch 3)
(Call #"writeln[f1]" 1)
(Return)
];
}}*BASIS;

