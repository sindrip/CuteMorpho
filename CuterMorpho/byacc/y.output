   0  $accept : start $end

   1  start : bodyexprs

   2  opt_idlist :
   3             | idlist

   4  idlist : idlist ',' NAME
   5         | NAME

   6  body : '{' bodyexprs '}'

   7  bodyexprs : bodyexprs expr ';'
   8            | bodyexprs funcdecl ';'
   9            | bodyexprs VAR decl_vars ';'
  10            |

  11  funcdecl : FUNC NAME '(' opt_idlist ')' body

  12  decl_vars : NAME EQUALS expr

  13  expr : RETURN expr
  14       | NAME EQUALS expr
  15       | orexpr

  16  orexpr : orexpr OR andexpr
  17         | andexpr

  18  andexpr : andexpr AND notexpr
  19          | notexpr

  20  notexpr : NOT notexpr
  21          | binopexpr

  22  binopexpr : smallexpr OPNAME1 binopexpr
  23            | smallexpr OPNAME2 binopexpr
  24            | smallexpr OPNAME3 binopexpr
  25            | smallexpr

  26  smallexpr : OPNAME1 smallexpr
  27            | OPNAME2 smallexpr
  28            | OPNAME3 smallexpr
  29            | '(' expr ')'
  30            | NAME
  31            | NAME '(' args ')'
  32            | WHILE '(' expr ')' body
  33            | ifexpr
  34            | LITERAL
  35            | body

  36  args :
  37       | arglist

  38  arglist : arglist ',' expr
  39          | expr

  40  ifexpr : IF '(' expr ')' body
  41         | IF '(' expr ')' body elseexpr

  42  elseexpr : ELSE body
  43           | ELSE ifexpr

state 0
	$accept : . start $end  (0)
	bodyexprs : .  (10)

	.  reduce 10

	start  goto 1
	bodyexprs  goto 2


state 1
	$accept : start . $end  (0)

	$end  accept


state 2
	start : bodyexprs .  (1)
	bodyexprs : bodyexprs . expr ';'  (7)
	bodyexprs : bodyexprs . funcdecl ';'  (8)
	bodyexprs : bodyexprs . VAR decl_vars ';'  (9)

	FUNC  shift 3
	RETURN  shift 4
	IF  shift 5
	VAR  shift 6
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	$end  reduce 1

	body  goto 16
	funcdecl  goto 17
	expr  goto 18
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 3
	funcdecl : FUNC . NAME '(' opt_idlist ')' body  (11)

	NAME  shift 25
	.  error


state 4
	expr : RETURN . expr  (13)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	expr  goto 26
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 5
	ifexpr : IF . '(' expr ')' body  (40)
	ifexpr : IF . '(' expr ')' body elseexpr  (41)

	'('  shift 27
	.  error


state 6
	bodyexprs : bodyexprs VAR . decl_vars ';'  (9)

	NAME  shift 28
	.  error

	decl_vars  goto 29


state 7
	smallexpr : WHILE . '(' expr ')' body  (32)

	'('  shift 30
	.  error


state 8
	expr : NAME . EQUALS expr  (14)
	smallexpr : NAME .  (30)
	smallexpr : NAME . '(' args ')'  (31)

	EQUALS  shift 31
	'('  shift 32
	OPNAME1  reduce 30
	OPNAME2  reduce 30
	OPNAME3  reduce 30
	OR  reduce 30
	AND  reduce 30
	','  reduce 30
	';'  reduce 30
	')'  reduce 30


state 9
	smallexpr : LITERAL .  (34)

	.  reduce 34


state 10
	smallexpr : OPNAME1 . smallexpr  (26)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	smallexpr  goto 34
	ifexpr  goto 24


state 11
	smallexpr : OPNAME2 . smallexpr  (27)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	smallexpr  goto 35
	ifexpr  goto 24


state 12
	smallexpr : OPNAME3 . smallexpr  (28)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	smallexpr  goto 36
	ifexpr  goto 24


state 13
	notexpr : NOT . notexpr  (20)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	notexpr  goto 37
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 14
	body : '{' . bodyexprs '}'  (6)
	bodyexprs : .  (10)

	.  reduce 10

	bodyexprs  goto 38


state 15
	smallexpr : '(' . expr ')'  (29)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	expr  goto 39
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 16
	smallexpr : body .  (35)

	.  reduce 35


state 17
	bodyexprs : bodyexprs funcdecl . ';'  (8)

	';'  shift 40
	.  error


state 18
	bodyexprs : bodyexprs expr . ';'  (7)

	';'  shift 41
	.  error


state 19
	expr : orexpr .  (15)
	orexpr : orexpr . OR andexpr  (16)

	OR  shift 42
	','  reduce 15
	';'  reduce 15
	')'  reduce 15


state 20
	orexpr : andexpr .  (17)
	andexpr : andexpr . AND notexpr  (18)

	AND  shift 43
	OR  reduce 17
	','  reduce 17
	';'  reduce 17
	')'  reduce 17


state 21
	andexpr : notexpr .  (19)

	.  reduce 19


state 22
	notexpr : binopexpr .  (21)

	.  reduce 21


state 23
	binopexpr : smallexpr . OPNAME1 binopexpr  (22)
	binopexpr : smallexpr . OPNAME2 binopexpr  (23)
	binopexpr : smallexpr . OPNAME3 binopexpr  (24)
	binopexpr : smallexpr .  (25)

	OPNAME1  shift 44
	OPNAME2  shift 45
	OPNAME3  shift 46
	OR  reduce 25
	AND  reduce 25
	','  reduce 25
	';'  reduce 25
	')'  reduce 25


state 24
	smallexpr : ifexpr .  (33)

	.  reduce 33


state 25
	funcdecl : FUNC NAME . '(' opt_idlist ')' body  (11)

	'('  shift 47
	.  error


state 26
	expr : RETURN expr .  (13)

	.  reduce 13


state 27
	ifexpr : IF '(' . expr ')' body  (40)
	ifexpr : IF '(' . expr ')' body elseexpr  (41)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	expr  goto 48
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 28
	decl_vars : NAME . EQUALS expr  (12)

	EQUALS  shift 49
	.  error


state 29
	bodyexprs : bodyexprs VAR decl_vars . ';'  (9)

	';'  shift 50
	.  error


state 30
	smallexpr : WHILE '(' . expr ')' body  (32)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	expr  goto 51
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 31
	expr : NAME EQUALS . expr  (14)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	expr  goto 52
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 32
	smallexpr : NAME '(' . args ')'  (31)
	args : .  (36)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	')'  reduce 36

	body  goto 16
	expr  goto 53
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	args  goto 54
	arglist  goto 55
	ifexpr  goto 24


state 33
	smallexpr : NAME .  (30)
	smallexpr : NAME . '(' args ')'  (31)

	'('  shift 32
	OPNAME1  reduce 30
	OPNAME2  reduce 30
	OPNAME3  reduce 30
	OR  reduce 30
	AND  reduce 30
	','  reduce 30
	';'  reduce 30
	')'  reduce 30


state 34
	smallexpr : OPNAME1 smallexpr .  (26)

	.  reduce 26


state 35
	smallexpr : OPNAME2 smallexpr .  (27)

	.  reduce 27


state 36
	smallexpr : OPNAME3 smallexpr .  (28)

	.  reduce 28


state 37
	notexpr : NOT notexpr .  (20)

	.  reduce 20


state 38
	body : '{' bodyexprs . '}'  (6)
	bodyexprs : bodyexprs . expr ';'  (7)
	bodyexprs : bodyexprs . funcdecl ';'  (8)
	bodyexprs : bodyexprs . VAR decl_vars ';'  (9)

	FUNC  shift 3
	RETURN  shift 4
	IF  shift 5
	VAR  shift 6
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'}'  shift 56
	'('  shift 15
	.  error

	body  goto 16
	funcdecl  goto 17
	expr  goto 18
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 39
	smallexpr : '(' expr . ')'  (29)

	')'  shift 57
	.  error


state 40
	bodyexprs : bodyexprs funcdecl ';' .  (8)

	.  reduce 8


state 41
	bodyexprs : bodyexprs expr ';' .  (7)

	.  reduce 7


state 42
	orexpr : orexpr OR . andexpr  (16)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	andexpr  goto 58
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 43
	andexpr : andexpr AND . notexpr  (18)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	notexpr  goto 59
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 44
	binopexpr : smallexpr OPNAME1 . binopexpr  (22)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	binopexpr  goto 60
	smallexpr  goto 23
	ifexpr  goto 24


state 45
	binopexpr : smallexpr OPNAME2 . binopexpr  (23)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	binopexpr  goto 61
	smallexpr  goto 23
	ifexpr  goto 24


state 46
	binopexpr : smallexpr OPNAME3 . binopexpr  (24)

	IF  shift 5
	WHILE  shift 7
	NAME  shift 33
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	binopexpr  goto 62
	smallexpr  goto 23
	ifexpr  goto 24


state 47
	funcdecl : FUNC NAME '(' . opt_idlist ')' body  (11)
	opt_idlist : .  (2)

	NAME  shift 63
	')'  reduce 2

	opt_idlist  goto 64
	idlist  goto 65


state 48
	ifexpr : IF '(' expr . ')' body  (40)
	ifexpr : IF '(' expr . ')' body elseexpr  (41)

	')'  shift 66
	.  error


state 49
	decl_vars : NAME EQUALS . expr  (12)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	expr  goto 67
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 50
	bodyexprs : bodyexprs VAR decl_vars ';' .  (9)

	.  reduce 9


state 51
	smallexpr : WHILE '(' expr . ')' body  (32)

	')'  shift 68
	.  error


state 52
	expr : NAME EQUALS expr .  (14)

	.  reduce 14


state 53
	arglist : expr .  (39)

	.  reduce 39


state 54
	smallexpr : NAME '(' args . ')'  (31)

	')'  shift 69
	.  error


state 55
	args : arglist .  (37)
	arglist : arglist . ',' expr  (38)

	','  shift 70
	')'  reduce 37


state 56
	body : '{' bodyexprs '}' .  (6)

	.  reduce 6


state 57
	smallexpr : '(' expr ')' .  (29)

	.  reduce 29


state 58
	orexpr : orexpr OR andexpr .  (16)
	andexpr : andexpr . AND notexpr  (18)

	AND  shift 43
	OR  reduce 16
	','  reduce 16
	';'  reduce 16
	')'  reduce 16


state 59
	andexpr : andexpr AND notexpr .  (18)

	.  reduce 18


state 60
	binopexpr : smallexpr OPNAME1 binopexpr .  (22)

	.  reduce 22


state 61
	binopexpr : smallexpr OPNAME2 binopexpr .  (23)

	.  reduce 23


state 62
	binopexpr : smallexpr OPNAME3 binopexpr .  (24)

	.  reduce 24


state 63
	idlist : NAME .  (5)

	.  reduce 5


state 64
	funcdecl : FUNC NAME '(' opt_idlist . ')' body  (11)

	')'  shift 71
	.  error


state 65
	opt_idlist : idlist .  (3)
	idlist : idlist . ',' NAME  (4)

	','  shift 72
	')'  reduce 3


state 66
	ifexpr : IF '(' expr ')' . body  (40)
	ifexpr : IF '(' expr ')' . body elseexpr  (41)

	'{'  shift 14
	.  error

	body  goto 73


state 67
	decl_vars : NAME EQUALS expr .  (12)

	.  reduce 12


state 68
	smallexpr : WHILE '(' expr ')' . body  (32)

	'{'  shift 14
	.  error

	body  goto 74


state 69
	smallexpr : NAME '(' args ')' .  (31)

	.  reduce 31


state 70
	arglist : arglist ',' . expr  (38)

	RETURN  shift 4
	IF  shift 5
	WHILE  shift 7
	NAME  shift 8
	LITERAL  shift 9
	OPNAME1  shift 10
	OPNAME2  shift 11
	OPNAME3  shift 12
	NOT  shift 13
	'{'  shift 14
	'('  shift 15
	.  error

	body  goto 16
	expr  goto 75
	orexpr  goto 19
	andexpr  goto 20
	notexpr  goto 21
	binopexpr  goto 22
	smallexpr  goto 23
	ifexpr  goto 24


state 71
	funcdecl : FUNC NAME '(' opt_idlist ')' . body  (11)

	'{'  shift 14
	.  error

	body  goto 76


state 72
	idlist : idlist ',' . NAME  (4)

	NAME  shift 77
	.  error


state 73
	ifexpr : IF '(' expr ')' body .  (40)
	ifexpr : IF '(' expr ')' body . elseexpr  (41)

	ELSE  shift 78
	OPNAME1  reduce 40
	OPNAME2  reduce 40
	OPNAME3  reduce 40
	OR  reduce 40
	AND  reduce 40
	','  reduce 40
	';'  reduce 40
	')'  reduce 40

	elseexpr  goto 79


state 74
	smallexpr : WHILE '(' expr ')' body .  (32)

	.  reduce 32


state 75
	arglist : arglist ',' expr .  (38)

	.  reduce 38


state 76
	funcdecl : FUNC NAME '(' opt_idlist ')' body .  (11)

	.  reduce 11


state 77
	idlist : idlist ',' NAME .  (4)

	.  reduce 4


state 78
	elseexpr : ELSE . body  (42)
	elseexpr : ELSE . ifexpr  (43)

	IF  shift 5
	'{'  shift 14
	.  error

	body  goto 80
	ifexpr  goto 81


state 79
	ifexpr : IF '(' expr ')' body elseexpr .  (41)

	.  reduce 41


state 80
	elseexpr : ELSE body .  (42)

	.  reduce 42


state 81
	elseexpr : ELSE ifexpr .  (43)

	.  reduce 43


23 terminals, 18 nonterminals
44 grammar rules, 82 states
